{"ast":null,"code":"import'bootstrap/dist/css/bootstrap.css';//import styles from './paginaWeb/css/dashboard.module.css';\nimport React,{useState,useEffect}from'react';import Masonry from'masonry-layout';//import Axios from 'axios';\nimport axiosInstance from'./AxiosConf/axiosconf';//import { Link } from 'react-router-dom';\n//Componentes\nimport CardContainer from'./components/cardContainerDashboard';import Menu from'./components/menuComponent';import{usePerfil}from'./components/publicacionUtils';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Explore(){const[allImg,setAllImg]=useState([]);const[base64Images,setBase64Images]=useState([]);const perfil=usePerfil();//Obtiene valores de las fotos y demás cosas de la base de datos\nuseEffect(()=>{axiosInstance.get(\"http://localhost:3001/getnewtoold\").then(response=>{if(response.data===\"No imagen\"){alert(\"No hay imágenes\");}else{setAllImg(response.data);//console.log(response.data);\n}}).catch(error=>{console.error(\"Error fetching images:\",error);});},[]);//Conversion de los valores a un base64\nuseEffect(()=>{const convertImagesToBase64=async()=>{if(allImg.length>0&&Array.isArray(allImg[0])&&allImg[0].length>0){const base64Promises=allImg[0].map(val=>{const blob=new Blob([new Uint8Array(val.foto_post.data)],{type:'image/jpeg'});const reader=new FileReader();reader.readAsDataURL(blob);return new Promise(resolve=>{reader.onloadend=()=>{resolve(reader.result.split(',')[1]);};});});try{const base64Strings=await Promise.all(base64Promises);setBase64Images(base64Strings);//console.log(base64Strings); // Cambiado a log de base64Strings en lugar de base64Images\n}catch(error){console.error(\"Error converting images to base64:\",error);}}};convertImagesToBase64();// Llamamos a la función de conversión independientemente del tamaño de allImg\n},[allImg]);//Masonry effect    \nuseEffect(()=>{const initializeMasonry=()=>{const grid=document.querySelector('.row-cols-md-3');if(grid){const masonry=new Masonry(grid,{itemSelector:'.col',percentPosition:true});masonry.layout();}};initializeMasonry();},[allImg]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Menu,{perfil:perfil}),/*#__PURE__*/_jsx(CardContainer,{data:base64Images.map((base64String,index)=>({imageUrl:base64String,title:allImg[0][index].titulo_post,idPost:allImg[0][index].id_post}))})]});}export default Explore;","map":{"version":3,"names":["React","useState","useEffect","Masonry","axiosInstance","CardContainer","Menu","usePerfil","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Explore","allImg","setAllImg","base64Images","setBase64Images","perfil","get","then","response","data","alert","catch","error","console","convertImagesToBase64","length","Array","isArray","base64Promises","map","val","blob","Blob","Uint8Array","foto_post","type","reader","FileReader","readAsDataURL","Promise","resolve","onloadend","result","split","base64Strings","all","initializeMasonry","grid","document","querySelector","masonry","itemSelector","percentPosition","layout","children","base64String","index","imageUrl","title","titulo_post","idPost","id_post"],"sources":["D:/Clases/Programacion Web II/PW2_Project/pw2/front/src/Explorar.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\n//import styles from './paginaWeb/css/dashboard.module.css';\nimport React, { useState, useEffect } from 'react';\nimport Masonry from 'masonry-layout';\n//import Axios from 'axios';\nimport axiosInstance from './AxiosConf/axiosconf';\n//import { Link } from 'react-router-dom';\n\n//Componentes\nimport CardContainer from './components/cardContainerDashboard';\nimport Menu from './components/menuComponent';\nimport {usePerfil} from './components/publicacionUtils';\n\n\nfunction Explore() {\n\n\n    const [allImg, setAllImg] = useState([]);\n    const [base64Images, setBase64Images] = useState([]);\n\n    const perfil = usePerfil(); \n\n\n    //Obtiene valores de las fotos y demás cosas de la base de datos\n    useEffect(() => {\n        axiosInstance.get(\"http://localhost:3001/getnewtoold\")\n            .then((response) => {\n                if (response.data === \"No imagen\") {\n                    alert(\"No hay imágenes\");\n                } else {\n                    setAllImg(response.data);\n                    //console.log(response.data);\n                }\n            })\n            .catch((error) => {\n                console.error(\"Error fetching images:\", error);\n            });\n    }, []);\n    //Conversion de los valores a un base64\n    useEffect(() => {\n        const convertImagesToBase64 = async () => {\n            if (allImg.length > 0 && Array.isArray(allImg[0]) && allImg[0].length > 0) {\n                const base64Promises = allImg[0].map((val) => {\n                    const blob = new Blob([new Uint8Array(val.foto_post.data)], { type: 'image/jpeg' });\n                    const reader = new FileReader();\n                    reader.readAsDataURL(blob);\n                    return new Promise((resolve) => {\n                        reader.onloadend = () => {\n                            resolve(reader.result.split(',')[1]);\n                        };\n                    });\n                });\n\n                try {\n                    const base64Strings = await Promise.all(base64Promises);\n                    setBase64Images(base64Strings);\n                    //console.log(base64Strings); // Cambiado a log de base64Strings en lugar de base64Images\n                } catch (error) {\n                    console.error(\"Error converting images to base64:\", error);\n                }\n            }\n        };\n\n        convertImagesToBase64(); // Llamamos a la función de conversión independientemente del tamaño de allImg\n\n    }, [allImg]);\n    //Masonry effect    \n    useEffect(() => {\n        const initializeMasonry = () => {\n            const grid = document.querySelector('.row-cols-md-3');\n            if (grid) {\n                const masonry = new Masonry(grid, {\n                    itemSelector: '.col',\n                    percentPosition: true\n                });\n                masonry.layout();\n            }\n        };\n\n        initializeMasonry();\n    }, [allImg]);\n\n\n\n\n    return (\n        <>\n\n            {/* <!-- Menú del apartado superior --> */}\n            {/* // Usando el componente del Menú */}\n            <Menu perfil={perfil} /> \n\n            {/* Renderiza el contenedor de tarjetas con los datos */}\n            <CardContainer data=\n                {base64Images.map((base64String, index) =>\n                (\n                    {\n                        imageUrl: base64String,\n                        title: allImg[0][index].titulo_post,\n                        idPost: allImg[0][index].id_post\n                    }\n                ))\n                }\n            />\n\n\n\n        </>\n\n\n\n    );\n}\n\nexport default Explore"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}